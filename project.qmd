<img src="assets/images/yangin.jpg" width="70%" style="display: block; margin: 0 auto; border-radius: 10x; box-shadow: 0 0 10px rgba(0,0,0,0.5); margin-bottom: 14x;" />




---
title: "PROJE: Türkiye'de Orman Yangınları Analizi (1988–2023)"
lang: tr
format: 
  html:
    toc: true
    number-sections: true
    code-fold: true
editor: visual
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(
  warning = FALSE,
  message = FALSE
)
```

Bu sayfa, Türkiye'deki orman yangınlarının nedenleri, dağılımı ve sonuçları üzerine yapılan veri analizi projesini sunmaktadır.

Gelişmeler için bu alanı takip edebilirsiniz.

# Proje Tanımı ve Kapsamı



## Problem Tanımı

## Hedeflerimiz


# Veri

## Veri Kaynağı

Veriler, **Orman Genel Müdürlüğü (OGM)** tarafından yayımlanan resmi Excel dosyalarından alınmıştır.

-   [Orman Genel Müdürlüğü Resmi Web Sitesi](https://www.ogm.gov.tr)
-   Veri dosyaları: Çeşitli Excel (.xlsx) formatındadır.

## Veriye Erişim

İlgili .RData dosyasına aşağıdaki bağlantıdan ulaşabilirsiniz:

👉 [Yangın Verileri RData Dosyası](https://github.com/ecezeynepa/yangin_verileri/raw/main/yangin_verileri.RData)

## Verinin Genel Özellikleri



Çalışmada kullanılan veri setleri şunlardır:

```{r, echo=TRUE, eval=TRUE}
# Gerekli paketleri yükle ve çağır
library(readxl)

# Çalışma dizinini ayarla
setwd("C:/Users/aktas/OneDrive/yangin_verisi")

# Verileri oku (uyarıları engellemek için .name_repair = "minimal" ekledik)
iller_2023 <- read_excel("iller_2023.xlsx", .name_repair = "minimal")
orman_yanginlari <- read_excel("orman_yanginlari1988_2023.xlsx", skip = 3, range = cell_rows(1:40), .name_repair = "minimal")
vasfina_2023 <- read_excel("vasfina_2023.xlsx", .name_repair = "minimal")
silvikulturel_2023 <- read_excel("silvikulturel_2023.xlsx", .name_repair = "minimal")
sebep_mudurluk_sayisal_2023 <- read_excel("sebep_mudurluk_sayisal_2023.xlsx", .name_repair = "minimal")
sebep_mudurluk_alan_2023 <- read_excel("sebep_mudurluk_alan_2023.xlsx", .name_repair = "minimal")
bolge_mudurluklerine_sayisal <- read_excel("bolge_mudurluklerine_sayisal_olarak_2004_2023.xlsx", .name_repair = "minimal")
bolge_mudurluklerine_alan <- read_excel("bolge_mudurluklerine_alan_olarak_2004_2023.xlsx", .name_repair = "minimal")
silvikultur_yillar <- read_excel("silvikultur_faaliyetler_1988_2023.xlsx", .name_repair = "minimal")
# Verilerin yapısını kontrol et
str(iller_2023)
str(orman_yanginlari)
str(vasfina_2023)
str(silvikulturel_2023)
str(sebep_mudurluk_sayisal_2023)
str(sebep_mudurluk_alan_2023)
str(bolge_mudurluklerine_sayisal)
str(bolge_mudurluklerine_alan)

# Verileri kaydet
save(iller_2023, orman_yanginlari, vasfina_2023, silvikulturel_2023,
     sebep_mudurluk_sayisal_2023, sebep_mudurluk_alan_2023,
     bolge_mudurluklerine_sayisal, bolge_mudurluklerine_alan,
     file = "C:/Users/aktas/OneDrive/yangin_verisi/yangin_verileri.RData")

```

## Veriyi Seçme Sebebi

-   Türkiye'ye özgü, resmi ve güvenilir bir kaynak olması,
-   Uzun yıllara yayılan ve çok yönlü analiz yapmaya elverişli veri içeriği sunması,
-   R programlama dili ile ileri veri analizleri ve modelleme çalışmalarına uygunluk sağlaması.

## Veri Ön İşleme

Verileri R ortamına aktarırken aşağıdaki adımlar uygulanmıştır:

1.  **Dosya İsimlerini Düzenleme:** TR'de dosya isimlerinde Türkçe karakterler (ç, ğ, ü, ö, ş, ı) bazen hata oluşturduğundan dolayı dosya isimlerindeki Türkçe karakterleri İngilizce karakterlere çevrildi. Örneğin: "bölge_mudurluklerine_sayisal_olarak_2004_2023.xlsx" dosyasını "bolge_mudurluklerine_sayisal_olarak_2004_2023.xlsx" olarak değiştirildi.

2.  **Veri Temizleme:** Excel dosyalarındaki gereksiz açıklamalar, görseller, boş satırlar gibi analizle ilgisi olmayan içerikleri silindi. Böylece veri setlerinin doğrudan okunabilir ve işlenebilir hale gelmesini sağlandı.

3.  **Sütun İsimlerini Düzenleme:** o Sütun isimlerindeki Türkçe karakterleri İngilizce karakterlerle değiştirdim (Şehir yerine Sehir, Bölge yerine Bolge gibi). o Ayrıca sütun adlarını daha açıklayıcı hale getirdim. Örneğin: yangın sebeplerine göre ihmal, kaza, kasıt ana kategorilerini detaylandırarak şu şekilde isimlendirdim:  ihmal_copluk, ihmal_avcilik  kaza_trafik, kaza_enerji  kasit_yangin, kasit_aniz

4.  **Veri Yapısını Düzenleme:** Aynı kategorideki veriler bir araya getirildi.

5.  **Veri İçe Aktarma:** `read.xlsx()` fonksiyonu ile xlsx paketinden veriler aktarıldı (`encoding = "UTF-8"` kullanıldı).

6.  **Planlanan İleri Ön İşleme Adımları:**

   

# Analiz

## Keşifsel Veri Analizi (Exploratory Data Analysis)

```{r, echo=TRUE, eval=TRUE}
library(readxl)
library(tidyr)
library(dplyr)
library(ggplot2)
library(scales)

# Veriyi oku (uyarıları bastır)
df <- suppressMessages(read_excel("C:/Users/aktas/OneDrive/yangin_verisi/orman_yanginlari1988_2023.xlsx"))

# Sayısal kolonları temizle + dönüştür (uyarıları bastır)
df$yil <- suppressWarnings(as.numeric(df$yil))
df$adet <- suppressWarnings(as.numeric(gsub("[^0-9.]", "", df$adet)))
df$hektar <- suppressWarnings(as.numeric(gsub("[^0-9.]", "", df$hektar)))

# NA'ları temizle
df <- df |> filter(!is.na(yil), !is.na(adet), !is.na(hektar))

# Grafik 1: Yangın Sayısı
print(
  ggplot(df, aes(x = yil, y = adet)) +
    geom_line(linewidth = 1.2, color = "firebrick") +
    geom_point(color = "darkred") +
    scale_x_continuous(breaks = seq(min(df$yil), max(df$yil), by = 1)) +
    labs(title = "Yıllara Göre Orman Yangın Sayısı",
         x = "Yıl", y = "Yangın Sayısı (adet)") +
    theme_minimal() +
    theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
)

# Grafik 2: Yanan Alan (DÜZENLENDİ: Y ekseni okunaklı)
print(
  ggplot(df, aes(x = yil, y = hektar)) +
    geom_line(linewidth = 1.2, color = "darkgreen") +
    geom_point(color = "forestgreen") +
    scale_x_continuous(breaks = seq(min(df$yil), max(df$yil), by = 1)) +
    scale_y_continuous(labels = label_comma()) +
    labs(title = "Yıllara Göre Yanan Alan (Hektar)",
         x = "Yıl", y = "Alan") +
    theme_minimal() +
    theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
)

# Grafik 3: Yangın Nedenleri
neden_df <- df |>
  select(yil, kasit_adet, ihmal_kaza_adet, dogal_adet, `sebebi_bilinmeyen_ adet`) |>
  mutate(across(-yil, ~ suppressWarnings(as.numeric(gsub("[^0-9.]", "", .))))) |>
  pivot_longer(cols = -yil, names_to = "neden", values_to = "adet") |>
  filter(!is.na(adet))

print(
  ggplot(neden_df, aes(x = yil, y = adet, color = neden)) +
    geom_line(linewidth = 1.1) +
    scale_x_continuous(breaks = seq(min(neden_df$yil), max(neden_df$yil), by = 1)) +
    labs(title = "Yangın Nedenlerine Göre Yıllık Dağılım",
         x = "Yıl", y = "Yangın Sayısı") +
    theme_minimal() +
    theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
)


```

```{r, echo=TRUE, eval=TRUE}
library(readxl)
library(dplyr)
library(tidyr)
library(ggplot2)
library(scales)

# Veriyi oku ve sayısal hale getir
df <- read_excel("C:/Users/aktas/OneDrive/yangin_verisi/orman_yanginlari1988_2023.xlsx") |>
  mutate(
    yil = as.numeric(yil),
    kasit_adet = as.numeric(gsub("[^0-9.]", "", kasit_adet)),
    ihmal_kaza_adet = as.numeric(gsub("[^0-9.]", "", ihmal_kaza_adet)),
    dogal_adet = as.numeric(gsub("[^0-9.]", "", dogal_adet)),
    sebebi_bilinmeyen_adet = as.numeric(gsub("[^0-9.]", "", `sebebi_bilinmeyen_ adet`))
  ) |>
  select(yil, kasit_adet, ihmal_kaza_adet, dogal_adet, sebebi_bilinmeyen_adet)

# Uzun forma getir
neden_df <- df |>
  pivot_longer(cols = -yil, names_to = "neden", values_to = "adet") |>
  filter(!is.na(adet))

# Grafik
ggplot(neden_df, aes(x = yil, y = adet, fill = neden)) +
  geom_area(alpha = 0.8) +
  labs(
    title = "1988–2023 Yılları Arasında Yangın Nedenlerine Göre Dağılım (Stacked Area Chart)",
    x = "Yıl",
    y = "Yangın Sayısı",
    fill = "Yangın Nedeni"
  ) +
  theme_minimal(base_size = 12) +
  theme(
    axis.text.x = element_text(angle = 90, vjust = 0.5),
    plot.title = element_text(face = "bold", hjust = 0.5)
  ) +
  scale_y_continuous(labels = label_comma()) +
  scale_x_continuous(breaks = seq(min(neden_df$yil), max(neden_df$yil), by = 1))

```

```{r, echo=TRUE, eval=TRUE}
library(readxl)
library(dplyr)
library(ggplot2)
library(scales)

# Veriyi oku
iller <- read_excel("C:/Users/aktas/OneDrive/yangin_verisi/iller_2023.xlsx")

# Sayısal düzeltme + Türkiye satırını çıkar
iller <- iller |>
  filter(sehir != "Türkiye") |>
  mutate(
    adet = as.numeric(gsub(",", ".", adet)),
    hektar = as.numeric(gsub(",", ".", hektar))
  ) |>
  filter(adet > 0, hektar > 0) |>
  mutate(orani = hektar / adet)

# Grafik 1: En Çok Yangın Çıkan İlk 15 İl
print(
  iller |>
    arrange(desc(adet)) |>
    slice_head(n = 15) |>
    ggplot(aes(x = reorder(sehir, -adet), y = adet)) +
    geom_bar(stat = "identity", fill = "#d73027") +
    labs(title = "2023 – En Çok Yangın Çıkan 15 İl",
         x = NULL, y = "Yangın Sayısı") +
    theme_minimal(base_size = 12) +
    theme(
      axis.text.x = element_text(angle = 45, hjust = 1),
      plot.title = element_text(face = "bold", hjust = 0.5)
    ) +
    scale_y_continuous(labels = label_comma(accuracy = 1))
)

# Grafik 2: En Fazla Alan Yanan İlk 15 İl
print(
  iller |>
    arrange(desc(hektar)) |>
    slice_head(n = 15) |>
    ggplot(aes(x = reorder(sehir, -hektar), y = hektar)) +
    geom_bar(stat = "identity", fill = "#1a9850") +
    labs(title = "2023 – En Fazla Alan Yanan 15 İl",
         x = NULL, y = "Yanan Alan (Hektar)") +
    theme_minimal(base_size = 12) +
    theme(
      axis.text.x = element_text(angle = 45, hjust = 1),
      plot.title = element_text(face = "bold", hjust = 0.5)
    ) +
    scale_y_continuous(labels = label_comma(accuracy = 1))
)

# Grafik 3: Yangın Başına Ortalama Yanan Alan (etkililik)
print(
  iller |>
    arrange(desc(orani)) |>
    slice_head(n = 15) |>
    ggplot(aes(x = reorder(sehir, -orani), y = orani)) +
    geom_bar(stat = "identity", fill = "#4575b4") +
    labs(title = "2023 – Yangın Başına Ortalama Yanan Alan",
         x = NULL, y = "Hektar / Yangın") +
    theme_minimal(base_size = 12) +
    theme(
      axis.text.x = element_text(angle = 45, hjust = 1),
      plot.title = element_text(face = "bold", hjust = 0.5)
    ) +
    scale_y_continuous(labels = label_comma(accuracy = 1))
)

```
### 🔥 Leaflet Harita – 2023 İl Bazında Yangın Sayısı ve Alan


```{r, echo=TRUE, eval=TRUE}
library(readr)
library(readxl)
library(dplyr)
library(leaflet)
library(stringi)

# Türkçe karakter düzeltme fonksiyonu
duzelt <- function(x) {
  tolower(stri_trans_general(x, "Latin-ASCII"))
}

# 1. İl koordinat verisini yükle (il.csv dosyan)
koord <- read_csv("C:/Users/aktas/OneDrive/yangin_verisi/il.csv") |>
  mutate(il_adi = duzelt(il_adi)) |>
  select(sehir = il_adi, lat, lon)

# 2. 2023 yılı yangın verisini oku ve temizle
iller <- read_excel("C:/Users/aktas/OneDrive/yangin_verisi/iller_2023.xlsx") |>
  filter(sehir != "Türkiye") |>
  mutate(
    sehir = duzelt(sehir),
    adet = as.numeric(gsub(",", ".", adet)),
    hektar = as.numeric(gsub(",", ".", hektar))
  )

# 3. Koordinatlar ile yangın verisini birleştir
iller_map <- left_join(koord, iller, by = "sehir") |> filter(!is.na(lat), !is.na(hektar))

# 4. Leaflet haritası oluştur
leaflet(data = iller_map) |>
  addProviderTiles("CartoDB.Positron") |>
  addCircleMarkers(
    lng = ~lon, lat = ~lat,
    radius = ~sqrt(hektar)/2,
    color = "darkred",
    stroke = FALSE,
    fillOpacity = 0.7,
    popup = ~paste0(
      "<b>", toupper(sehir), "</b><br>",
      "Yangın Sayısı: ", adet, "<br>",
      "Yanan Alan: ", hektar, " ha"
    )
  )


```



### 🌍 Harita: 2023 – İl Bazında Yangın Başına Ortalama Yanan Alan

Bu interaktif harita, Türkiye'deki illerde 2023 yılı boyunca çıkan yangınlar başına düşen ortalama yanan alanı (hektar / adet) göstermektedir. Baloncukların büyüklüğü, o ildeki yangınların ortalama şiddetini yansıtmaktadır.


```{r, echo=TRUE, eval=TRUE}
library(readr)
library(readxl)
library(dplyr)
library(leaflet)
library(stringi)

# Karakter düzeltme fonksiyonu
duzelt <- function(x) {
  tolower(stri_trans_general(x, "Latin-ASCII"))
}

# 1. Koordinat verisini oku
koord <- read_csv("C:/Users/aktas/OneDrive/yangin_verisi/il.csv") |>
  mutate(sehir = duzelt(il_adi)) |>
  select(sehir, lat, lon)

# 2. İl yangın verisini oku ve ortalama hesapla
iller <- read_excel("C:/Users/aktas/OneDrive/yangin_verisi/iller_2023.xlsx") |>
  filter(sehir != "Türkiye") |>
  mutate(
    sehir = duzelt(sehir),
    adet = as.numeric(gsub(",", ".", adet)),
    hektar = as.numeric(gsub(",", ".", hektar)),
    oran = hektar / adet
  ) |>
  filter(!is.na(oran), oran > 0)

# 3. Birleştir
veri <- left_join(koord, iller, by = "sehir") |> filter(!is.na(lat), !is.na(oran))

# 4. Renk paleti oluştur (kırmızı tonları)
pal <- colorNumeric(palette = "YlOrRd", domain = veri$oran)

# 5. Haritayı çiz
leaflet(veri) |>
  addProviderTiles("CartoDB.Positron") |>
  addCircleMarkers(
    lng = ~lon,
    lat = ~lat,
    radius = ~sqrt(oran)*2.5, # daha fark edilir hale gelir
    fillColor = ~pal(oran),
    fillOpacity = 0.8,
    color = "#444", weight = 1,
    stroke = TRUE,
    popup = ~paste0(
      "<b>", toupper(sehir), "</b><br>",
      "Yangın Sayısı: ", adet, "<br>",
      "Yanan Alan: ", hektar, " ha<br>",
      "<b>🔥 Ortalama Hektar / Yangın:</b> ", round(oran, 2)
    )
  ) |>
  addLegend(
    pal = pal, values = ~oran,
    title = "Ortalama Hektar / Yangın",
    position = "bottomright"
  )


```
**Grafik Yorumu:**  


```{r, echo=TRUE, eval=TRUE}
library(readxl)
library(dplyr)
library(tidyr)
library(ggplot2)
library(scales)

# Excel dosyasını oku (tam yol)
vasif_df <- read_excel("C:/Users/aktas/OneDrive/yangin_verisi/vasfina_2023.xlsx", .name_repair = "minimal")

# Sütun isimlerini Türkçe karaktersiz olarak ayarla
colnames(vasif_df) <- c(
  "bolge", "toplam_hektar", "normal_koru", "bos_kapali_koru",
  "normal_bataklik", "bos_kapali_bataklik", "makilik",
  "agaclandirma_sahasi", "milli_park", "orman_topragi"
)

# "Toplam-Total" satırını çıkar (tek satırlık toplam veridir, grafik dışında tutuyoruz)
vasif_df <- vasif_df |> filter(bolge != "Toplam-Total")

# "-" karakterlerini NA yap ve sayıya çevir
vasif_df <- vasif_df |>
  mutate(across(-bolge, ~ as.numeric(gsub("-", NA, .))))

# Uzun formata pivotla (grafik için)
vasif_long <- vasif_df |>
  pivot_longer(cols = -c(bolge, toplam_hektar),
               names_to = "vasif_turu",
               values_to = "alan") |>
  filter(!is.na(alan), alan > 0)

# Grafik: Bölge müdürlüklerine göre vasıf türlerinin dağılımı
ggplot(vasif_long, aes(x = reorder(bolge, -toplam_hektar), y = alan, fill = vasif_turu)) +
  geom_bar(stat = "identity") +
  labs(
    title = "      Bolge Mudurluklerine Gore Orman Vasif Turlerinin Yanan Alan Dagilimi-2023",
    x = "Orman Bolge Mudurlugu",
    y = "Yanan Alan (ha)",
    fill = "Vasif Turu"
  ) +
  theme_minimal(base_size = 11) +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    plot.title = element_text(face = "bold", hjust = 0.5)
  ) +
  scale_y_continuous(labels = label_comma())


```

```{r, echo=TRUE, eval=TRUE}

library(readxl)
library(dplyr)
library(tidyr)
library(ggplot2)
library(scales)

# Veriyi oku
silvi_df <- read_excel("C:/Users/aktas/OneDrive/yangin_verisi/silvikulturel_2023.xlsx", .name_repair = "minimal")

# Sütun adları sade
colnames(silvi_df) <- c(
  "bolge", "toplam_alan", "ortuye_zarar_gormeyen",
  "dogal_genclestirme", "suni_genclestirme", "rehabilitasyon",
  "agaclandirma", "koruma_altina_alinan", "gelecek_yila_birakilan"
)

# Toplam satırı çıkar
silvi_df <- silvi_df |> filter(bolge != "Toplaml")

# Sayısallaştır
silvi_df <- silvi_df |> mutate(across(-bolge, ~ as.numeric(gsub("-", NA, .))))

# Müdahale türü toplamlarını hesapla
turkiye_geneli <- silvi_df |>
  select(-toplam_alan) |>
  pivot_longer(cols = -bolge,
               names_to = "mudahale_turu",
               values_to = "alan") |>
  filter(!is.na(alan)) |>
  group_by(mudahale_turu) |>
  summarise(toplam_alan = sum(alan)) |>
  arrange(desc(toplam_alan))

# Başlık
cat(" Grafik: Türkiye Genelinde Yangın Sonrası Müdahale Türlerinin Dağılımı (2023)\n")

# Grafik
print(
  ggplot(turkiye_geneli, aes(x = reorder(mudahale_turu, toplam_alan), y = toplam_alan)) +
    geom_bar(stat = "identity", fill = "darkolivegreen4") +
    coord_flip() +
    labs(
      title = "Turkiye Genelinde Yangin Sonrasi Mudahale Turlerinin Dagilimi (2023)",
      x = "Mudahale Turu", y = "Toplam Alan (ha)"
    ) +
    theme_minimal(base_size = 11) +
    theme(plot.title = element_text(face = "bold", hjust = 0.5)) +
    scale_y_continuous(labels = label_comma())
)

```
**Grafik Yorumu:**







## Trend Analizi



```{r}

library(readxl)
library(dplyr)
library(ggplot2)
library(scales)

# Veriyi oku ve temizle
df <- read_excel("C:/Users/aktas/OneDrive/yangin_verisi/orman_yanginlari1988_2023.xlsx") |>
  mutate(
    yil = as.numeric(yil),
    adet = as.numeric(gsub("[^0-9.]", "", adet)),
    hektar = as.numeric(gsub("[^0-9.]", "", hektar))
  ) |>
  filter(!is.na(yil), !is.na(adet), !is.na(hektar))

# Grafik 1: Yangın Sayısı
ggplot(df, aes(x = yil, y = adet)) +
  geom_line(color = "firebrick", linewidth = 1.2) +
  geom_point(color = "darkred") +
  geom_smooth(method = "lm", se = TRUE, color = "black", linetype = "dashed") +
  labs(
    title = "Yıllara Göre Orman Yangın Sayısı ve Trend Analizi (1988–2023)",
    x = "Yıl",
    y = "Yangın Sayısı (adet)"
  ) +
  theme_minimal(base_size = 12) +
  theme(
    axis.text.x = element_text(angle = 90, vjust = 0.5),
    plot.title = element_text(face = "bold", hjust = 0.5)
  ) +
  scale_x_continuous(breaks = seq(min(df$yil), max(df$yil), by = 1)) +
  scale_y_continuous(labels = label_comma())



#----------------------------------------------------------

# Grafik 2: Yanan Alan
ggplot(df, aes(x = yil, y = hektar)) +
  geom_line(color = "darkgreen", linewidth = 1.2) +
  geom_point(color = "forestgreen") +
  geom_smooth(method = "lm", se = TRUE, color = "black", linetype = "dashed") +
  labs(
    title = "Yıllara Göre Yanan Alan ve Trend Analizi (1988–2023)",
    x = "Yıl",
    y = "Yanan Alan (hektar)"
  ) +
  theme_minimal(base_size = 12) +
  theme(
    axis.text.x = element_text(angle = 90, vjust = 0.5),
    plot.title = element_text(face = "bold", hjust = 0.5)
  ) +
  scale_x_continuous(breaks = seq(min(df$yil), max(df$yil), by = 1)) +
  scale_y_continuous(labels = label_comma())


```

```{r, echo=TRUE, eval=TRUE}
library(readxl)
library(dplyr)
library(ggplot2)
library(scales)

# Veriyi oku ve hesapla
df <- read_excel("C:/Users/aktas/OneDrive/yangin_verisi/orman_yanginlari1988_2023.xlsx") |>
  mutate(
    yil = as.numeric(yil),
    adet = as.numeric(gsub("[^0-9.]", "", adet)),
    hektar = as.numeric(gsub("[^0-9.]", "", hektar)),
    ortalama_hektar = hektar / adet
  ) |>
  filter(!is.na(yil), !is.na(ortalama_hektar), ortalama_hektar < 100)  # çok uç yılları filtrele

# Grafik
ggplot(df, aes(x = yil, y = ortalama_hektar)) +
  geom_line(color = "#984ea3", linewidth = 1.2) +
  geom_point(color = "#6a3d9a") +
  geom_smooth(method = "lm", se = TRUE, color = "black", linetype = "dashed") +
  labs(
    title = "Yıllara Göre Yangın Başına Ortalama Yanan Alan (Hektar)",
    x = "Yıl",
    y = "Ortalama Hektar / Yangın"
  ) +
  theme_minimal(base_size = 12) +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +
  scale_y_continuous(labels = label_comma())


```


## Modelleme
### ARIMA Zaman Serisi Analizi: Yangın Sayısı Tahmini (2024–2026)

Bu bölümde, geçmiş verilere dayalı olarak 2024–2026 yıllarına ait orman yangını sayısı tahmini yapılmıştır. Tahminler, ARIMA (Auto-Regressive Integrated Moving Average) zaman serisi modeli ile elde edilmiştir.


Gerekirse yangın nedenleri ve etkileri üzerine istatistiksel modeller kurulacaktır.
```{r, echo=TRUE, eval=TRUE}
# Gerekli paketleri yükle (ilk kez çalıştırıyorsan sadece)
# install.packages("forecast")

library(readxl)
library(dplyr)
library(forecast)
library(ggplot2)

# 1. Veriyi oku ve zaman serisine çevir
df <- read_excel("C:/Users/aktas/OneDrive/yangin_verisi/orman_yanginlari1988_2023.xlsx") |>
  mutate(
    yil = as.numeric(yil),
    adet = as.numeric(gsub("[^0-9.]", "", adet))
  ) |>
  filter(!is.na(adet))

# 2. Zaman serisi oluştur
adet_ts <- ts(df$adet, start = 1988, frequency = 1)

# 3. ARIMA modeli kur ve tahmin yap
model <- auto.arima(adet_ts)
tahmin <- forecast(model, h = 3)  # 2024–2026 için tahmin

# 4. Tahmin grafiği
autoplot(tahmin) +
  labs(
    title = "2024–2026 Yılları İçin Orman Yangını Sayısı Tahmini (ARIMA)",
    x = "Yıl",
    y = "Tahmin Edilen Yangın Sayısı"
  ) +
  theme_minimal()


```
**Grafik Yorumu:**  
.

- **Siyah çizgi:** 1988–2023 yılları arasındaki gerçek yangın sayısı  
- **Ortadaki koyu mavi çizgi:** Modelin en olası tahmini (point forecast)  
- **Mavi gölgeli alan:** %80 ve %95 güven aralığı (belirsizlik payı)  


# Sonuçlar ve Öneriler

## Summary


---

## 📊 Temel Bulgular

- **Yangın sayısı**: 1988–2023 döneminde yıllık yangın sayısında artış eğilimi gözlenmiştir. 2021 yılı yangın sayısı bakımından zirve yıldır.
- **Yanan alan**: Yıllık yanan orman alanları, özellikle 2008, 2013 ve 2021 yıllarında sıçrama göstermiştir.
- **Yangın nedenleri**: En büyük payı ihmal/kaza ve kasıtlı yangınlar oluşturmaktadır. Doğal yangınlar sınırlıdır.
- **2023 yılı analizleri**: Muğla, Antalya ve İzmir en çok yangın çıkan illerdir. Alan bazında da aynı iller öne çıkmaktadır.
- **Yangın şiddeti**: “Yangın başına ortalama yanan alan” verisi bazı illerde çok yüksektir (Mersin, Çanakkale, Kahramanmaraş).
- **Silvikültürel müdahaleler**: Müdahale türleri arasında "gelecek yıla bırakılan alanlar" ve "örtüye zarar görmeyen sahalar" öne çıkmaktadır.
- **ARIMA zaman serisi modeli**: 2024–2026 yıllarında yangın sayısının 2100–2400 arasında olması tahmin edilmiştir.

---

## 🛠️ Teknik Zorluklar ve Çözümler


---

## 🎯 Politika ve Uygulama Önerileri

-

## 📌 Genel Değerlendirme



**Not:** Bu projede belirli kod bloklarının hazırlanması ve veri yükleme yöntemlerinin düzenlenmesi aşamasında ChatGPT'den destek alınmıştır.

---
title: "PROJE: Türkiye'de Orman Yangınları Analizi (1988–2023)"
lang: tr
format: 
  html:
    toc: true
    number-sections: true
    code-fold: true
editor: visual
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(
  warning = FALSE,
  message = FALSE
)
```

Bu sayfa, Türkiye'deki orman yangınlarının nedenleri, dağılımı ve sonuçları üzerine yapılan veri analizi projesini sunmaktadır.

Gelişmeler için bu alanı takip edebilirsiniz.

# Proje Tanımı ve Kapsamı

Bu projede, Türkiye'deki orman yangınlarının zaman içindeki değişimi, bölgesel dağılımı ve yangın sonrası uygulamalar analiz edilecektir. Çalışmanın amacı, yangınların nedenlerini ve etkilerini daha iyi anlayarak politika önerileri geliştirmektir.

## Problem Tanımı

Türkiye’de orman yangınları hem çevresel hem de ekonomik ciddi sonuçlar doğurmaktadır. Bu çalışma ile: - 1988–2023 yılları arasındaki yangın nedenlerinin ve yanan alanların değişimi, - 2023 yılına özel bölgesel ve niteliksel yangın dağılımları, - Yangın sonrası silvikültürel uygulamalar analiz edilecektir.

## Hedeflerimiz

-   Yangın nedenlerinin yıllar içerisindeki değişimini incelemek,
-   Bölge müdürlüklerine göre yangın sayısı ve yanan alanı karşılaştırmak,
-   2023 yılı yangınlarının etkilerini değerlendirmek,
-   Bulguları grafik ve tablolarla sunmak ve politika önerileri geliştirmek,

# Veri

## Veri Kaynağı

Veriler, **Orman Genel Müdürlüğü (OGM)** tarafından yayımlanan resmi Excel dosyalarından alınmıştır.

-   [Orman Genel Müdürlüğü Resmi Web Sitesi](https://www.ogm.gov.tr)
-   Veri dosyaları: Çeşitli Excel (.xlsx) formatındadır.

## Veriye Erişim

İlgili .RData dosyasına aşağıdaki bağlantıdan ulaşabilirsiniz:

👉 [Yangın Verileri RData Dosyası](https://github.com/ecezeynepa/yangin_verileri/raw/main/yangin_verileri.RData)

## Verinin Genel Özellikleri

-   🔥 1988–2023 yılları arasında yangın nedenleri, sayıları ve yanan alan (hektar)

-   📍 2004–2023 yılları arasında bölge müdürlüklerine göre yangın sayısı ve alanı

-   📊 2023 yılına özel analizler:

    -   🏙️ İl bazında yangın sayısı

    -   🌲 Orman vasfına göre yanan alan türleri

    -   🚒 Yangın nedenlerinin detaylı sınıflandırması

    -   🌱 Yangın sonrası silvikültürel işlemler

Çalışmada kullanılan veri setleri şunlardır:

```{r}
# Gerekli paketleri yükle ve çağır
library(readxl)

# Çalışma dizinini ayarla
setwd("C:/Users/aktas/OneDrive/yangin_verisi")

# Verileri oku (uyarıları engellemek için .name_repair = "minimal" ekledik)
iller_2023 <- read_excel("iller_2023.xlsx", .name_repair = "minimal")
orman_yanginlari <- read_excel("orman_yanginlari1988_2023.xlsx", skip = 3, range = cell_rows(1:40), .name_repair = "minimal")
vasfina_2023 <- read_excel("vasfina_2023.xlsx", .name_repair = "minimal")
silvikulturel_2023 <- read_excel("silvikulturel_2023.xlsx", .name_repair = "minimal")
sebep_mudurluk_sayisal_2023 <- read_excel("sebep_mudurluk_sayisal_2023.xlsx", .name_repair = "minimal")
sebep_mudurluk_alan_2023 <- read_excel("sebep_mudurluk_alan_2023.xlsx", .name_repair = "minimal")
bolge_mudurluklerine_sayisal <- read_excel("bolge_mudurluklerine_sayisal_olarak_2004_2023.xlsx", .name_repair = "minimal")
bolge_mudurluklerine_alan <- read_excel("bolge_mudurluklerine_alan_olarak_2004_2023.xlsx", .name_repair = "minimal")

# Verilerin yapısını kontrol et
str(iller_2023)
str(orman_yanginlari)
str(vasfina_2023)
str(silvikulturel_2023)
str(sebep_mudurluk_sayisal_2023)
str(sebep_mudurluk_alan_2023)
str(bolge_mudurluklerine_sayisal)
str(bolge_mudurluklerine_alan)

# Verileri kaydet
save(iller_2023, orman_yanginlari, vasfina_2023, silvikulturel_2023,
     sebep_mudurluk_sayisal_2023, sebep_mudurluk_alan_2023,
     bolge_mudurluklerine_sayisal, bolge_mudurluklerine_alan,
     file = "C:/Users/aktas/OneDrive/yangin_verisi/yangin_verileri.RData")

```

## Veriyi Seçme Sebebi

-   Türkiye'ye özgü, resmi ve güvenilir bir kaynak olması,
-   Uzun yıllara yayılan ve çok yönlü analiz yapmaya elverişli veri içeriği sunması,
-   R programlama dili ile ileri veri analizleri ve modelleme çalışmalarına uygunluk sağlaması.

## Veri Ön İşleme

Verileri R ortamına aktarırken aşağıdaki adımlar uygulanmıştır:

1.  **Dosya İsimlerini Düzenleme:** TR'de dosya isimlerinde Türkçe karakterler (ç, ğ, ü, ö, ş, ı) bazen hata oluşturduğundan dolayı dosya isimlerindeki Türkçe karakterleri İngilizce karakterlere çevrildi. Örneğin: "bölge_mudurluklerine_sayisal_olarak_2004_2023.xlsx" dosyasını "bolge_mudurluklerine_sayisal_olarak_2004_2023.xlsx" olarak değiştirildi.

2.  **Veri Temizleme:** Excel dosyalarındaki gereksiz açıklamalar, görseller, boş satırlar gibi analizle ilgisi olmayan içerikleri silindi. Böylece veri setlerinin doğrudan okunabilir ve işlenebilir hale gelmesini sağlandı.

3.  **Sütun İsimlerini Düzenleme:** o Sütun isimlerindeki Türkçe karakterleri İngilizce karakterlerle değiştirdim (Şehir yerine Sehir, Bölge yerine Bolge gibi). o Ayrıca sütun adlarını daha açıklayıcı hale getirdim. Örneğin: yangın sebeplerine göre ihmal, kaza, kasıt ana kategorilerini detaylandırarak şu şekilde isimlendirdim:  ihmal_copluk, ihmal_avcilik  kaza_trafik, kaza_enerji  kasit_yangin, kasit_aniz

4.  **Veri Yapısını Düzenleme:** Aynı kategorideki veriler bir araya getirildi.

5.  **Veri İçe Aktarma:** `read.xlsx()` fonksiyonu ile xlsx paketinden veriler aktarıldı (`encoding = "UTF-8"` kullanıldı).

6.  **Planlanan İleri Ön İşleme Adımları:**

    -   Veri tiplerinin düzenlenmesi (character, numeric vs.),
    -   Eksik verileri (NA) belirleyip, gerekirse temizlemek,
    -   Kategorik değişkenlerin faktör (factor) formatına çevrilmesi.

# Analiz

## Keşifsel Veri Analizi (Exploratory Data Analysis)

```{r}
library(readxl)
library(tidyr)
library(dplyr)
library(ggplot2)
library(scales)

# Veriyi oku (uyarıları bastır)
df <- suppressMessages(read_excel("C:/Users/aktas/OneDrive/yangin_verisi/orman_yanginlari1988_2023.xlsx"))

# Sayısal kolonları temizle + dönüştür (uyarıları bastır)
df$yil <- suppressWarnings(as.numeric(df$yil))
df$adet <- suppressWarnings(as.numeric(gsub("[^0-9.]", "", df$adet)))
df$hektar <- suppressWarnings(as.numeric(gsub("[^0-9.]", "", df$hektar)))

# NA'ları temizle
df <- df |> filter(!is.na(yil), !is.na(adet), !is.na(hektar))

# Grafik 1: Yangın Sayısı
print(
  ggplot(df, aes(x = yil, y = adet)) +
    geom_line(linewidth = 1.2, color = "firebrick") +
    geom_point(color = "darkred") +
    scale_x_continuous(breaks = seq(min(df$yil), max(df$yil), by = 1)) +
    labs(title = "Yıllara Göre Orman Yangın Sayısı",
         x = "Yıl", y = "Yangın Sayısı (adet)") +
    theme_minimal() +
    theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
)

# Grafik 2: Yanan Alan (DÜZENLENDİ: Y ekseni okunaklı)
print(
  ggplot(df, aes(x = yil, y = hektar)) +
    geom_line(linewidth = 1.2, color = "darkgreen") +
    geom_point(color = "forestgreen") +
    scale_x_continuous(breaks = seq(min(df$yil), max(df$yil), by = 1)) +
    scale_y_continuous(labels = label_comma()) +
    labs(title = "Yıllara Göre Yanan Alan (Hektar)",
         x = "Yıl", y = "Alan") +
    theme_minimal() +
    theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
)

# Grafik 3: Yangın Nedenleri
neden_df <- df |>
  select(yil, kasit_adet, ihmal_kaza_adet, dogal_adet, `sebebi_bilinmeyen_ adet`) |>
  mutate(across(-yil, ~ suppressWarnings(as.numeric(gsub("[^0-9.]", "", .))))) |>
  pivot_longer(cols = -yil, names_to = "neden", values_to = "adet") |>
  filter(!is.na(adet))

print(
  ggplot(neden_df, aes(x = yil, y = adet, color = neden)) +
    geom_line(linewidth = 1.1) +
    scale_x_continuous(breaks = seq(min(neden_df$yil), max(neden_df$yil), by = 1)) +
    labs(title = "Yangın Nedenlerine Göre Yıllık Dağılım",
         x = "Yıl", y = "Yangın Sayısı") +
    theme_minimal() +
    theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
)


```

```{r}
library(readxl)
library(dplyr)
library(ggplot2)
library(scales)

# Veriyi oku
iller <- read_excel("C:/Users/aktas/OneDrive/yangin_verisi/iller_2023.xlsx")

# Sayısal düzeltme + Türkiye satırını çıkar
iller <- iller |>
  filter(sehir != "Türkiye") |>
  mutate(
    adet = as.numeric(gsub(",", ".", adet)),
    hektar = as.numeric(gsub(",", ".", hektar))
  ) |>
  filter(adet > 0, hektar > 0) |>
  mutate(orani = hektar / adet)

# Grafik 1: En Çok Yangın Çıkan İlk 15 İl
print(
  iller |>
    arrange(desc(adet)) |>
    slice_head(n = 15) |>
    ggplot(aes(x = reorder(sehir, -adet), y = adet)) +
    geom_bar(stat = "identity", fill = "#d73027") +
    labs(title = "2023 – En Çok Yangın Çıkan 15 İl",
         x = NULL, y = "Yangın Sayısı") +
    theme_minimal(base_size = 12) +
    theme(
      axis.text.x = element_text(angle = 45, hjust = 1),
      plot.title = element_text(face = "bold", hjust = 0.5)
    ) +
    scale_y_continuous(labels = label_comma(accuracy = 1))
)

# Grafik 2: En Fazla Alan Yanan İlk 15 İl
print(
  iller |>
    arrange(desc(hektar)) |>
    slice_head(n = 15) |>
    ggplot(aes(x = reorder(sehir, -hektar), y = hektar)) +
    geom_bar(stat = "identity", fill = "#1a9850") +
    labs(title = "2023 – En Fazla Alan Yanan 15 İl",
         x = NULL, y = "Yanan Alan (Hektar)") +
    theme_minimal(base_size = 12) +
    theme(
      axis.text.x = element_text(angle = 45, hjust = 1),
      plot.title = element_text(face = "bold", hjust = 0.5)
    ) +
    scale_y_continuous(labels = label_comma(accuracy = 1))
)

# Grafik 3: Yangın Başına Ortalama Yanan Alan (etkililik)
print(
  iller |>
    arrange(desc(orani)) |>
    slice_head(n = 15) |>
    ggplot(aes(x = reorder(sehir, -orani), y = orani)) +
    geom_bar(stat = "identity", fill = "#4575b4") +
    labs(title = "2023 – Yangın Başına Ortalama Yanan Alan",
         x = NULL, y = "Hektar / Yangın") +
    theme_minimal(base_size = 12) +
    theme(
      axis.text.x = element_text(angle = 45, hjust = 1),
      plot.title = element_text(face = "bold", hjust = 0.5)
    ) +
    scale_y_continuous(labels = label_comma(accuracy = 1))
)

```

```{r}
library(readr)
library(readxl)
library(dplyr)
library(leaflet)
library(stringi)

# Türkçe karakter düzeltme fonksiyonu
duzelt <- function(x) {
  tolower(stri_trans_general(x, "Latin-ASCII"))
}

# 1. İl koordinat verisini yükle (il.csv dosyan)
koord <- read_csv("C:/Users/aktas/OneDrive/yangin_verisi/il.csv") |>
  mutate(il_adi = duzelt(il_adi)) |>
  select(sehir = il_adi, lat, lon)

# 2. 2023 yılı yangın verisini oku ve temizle
iller <- read_excel("C:/Users/aktas/OneDrive/yangin_verisi/iller_2023.xlsx") |>
  filter(sehir != "Türkiye") |>
  mutate(
    sehir = duzelt(sehir),
    adet = as.numeric(gsub(",", ".", adet)),
    hektar = as.numeric(gsub(",", ".", hektar))
  )

# 3. Koordinatlar ile yangın verisini birleştir
iller_map <- left_join(koord, iller, by = "sehir") |> filter(!is.na(lat), !is.na(hektar))

# 4. Leaflet haritası oluştur
leaflet(data = iller_map) |>
  addProviderTiles("CartoDB.Positron") |>
  addCircleMarkers(
    lng = ~lon, lat = ~lat,
    radius = ~sqrt(hektar)/2,
    color = "darkred",
    stroke = FALSE,
    fillOpacity = 0.7,
    popup = ~paste0(
      "<b>", toupper(sehir), "</b><br>",
      "Yangın Sayısı: ", adet, "<br>",
      "Yanan Alan: ", hektar, " ha"
    )
  )


```

```{r}
library(readxl)
library(dplyr)
library(tidyr)
library(ggplot2)
library(scales)

# Excel dosyasını oku (tam yol)
vasif_df <- read_excel("C:/Users/aktas/OneDrive/yangin_verisi/vasfina_2023.xlsx", .name_repair = "minimal")

# Sütun isimlerini Türkçe karaktersiz olarak ayarla
colnames(vasif_df) <- c(
  "bolge", "toplam_hektar", "normal_koru", "bos_kapali_koru",
  "normal_bataklik", "bos_kapali_bataklik", "makilik",
  "agaclandirma_sahasi", "milli_park", "orman_topragi"
)

# "Toplam-Total" satırını çıkar (tek satırlık toplam veridir, grafik dışında tutuyoruz)
vasif_df <- vasif_df |> filter(bolge != "Toplam-Total")

# "-" karakterlerini NA yap ve sayıya çevir
vasif_df <- vasif_df |>
  mutate(across(-bolge, ~ as.numeric(gsub("-", NA, .))))

# Uzun formata pivotla (grafik için)
vasif_long <- vasif_df |>
  pivot_longer(cols = -c(bolge, toplam_hektar),
               names_to = "vasif_turu",
               values_to = "alan") |>
  filter(!is.na(alan), alan > 0)

# Grafik: Bölge müdürlüklerine göre vasıf türlerinin dağılımı
ggplot(vasif_long, aes(x = reorder(bolge, -toplam_hektar), y = alan, fill = vasif_turu)) +
  geom_bar(stat = "identity") +
  labs(
    title = "Bolge Mudurluklerine Gore Orman Vasif Turlerinin Yanan Alan Dagilimi (2023)",
    x = "Orman Bolge Mudurlugu",
    y = "Yanan Alan (ha)",
    fill = "Vasif Turu"
  ) +
  theme_minimal(base_size = 11) +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    plot.title = element_text(face = "bold", hjust = 0.5)
  ) +
  scale_y_continuous(labels = label_comma())


```

```{r}

library(readxl)
library(dplyr)
library(tidyr)
library(ggplot2)
library(scales)

# Veriyi oku
silvi_df <- read_excel("C:/Users/aktas/OneDrive/yangin_verisi/silvikulturel_2023.xlsx", .name_repair = "minimal")

# Sütun adları sade
colnames(silvi_df) <- c(
  "bolge", "toplam_alan", "ortuye_zarar_gormeyen",
  "dogal_genclestirme", "suni_genclestirme", "rehabilitasyon",
  "agaclandirma", "koruma_altina_alinan", "gelecek_yila_birakilan"
)

# Toplam satırı çıkar
silvi_df <- silvi_df |> filter(bolge != "Toplaml")

# Sayısallaştır
silvi_df <- silvi_df |> mutate(across(-bolge, ~ as.numeric(gsub("-", NA, .))))

# Müdahale türü toplamlarını hesapla
turkiye_geneli <- silvi_df |>
  select(-toplam_alan) |>
  pivot_longer(cols = -bolge,
               names_to = "mudahale_turu",
               values_to = "alan") |>
  filter(!is.na(alan)) |>
  group_by(mudahale_turu) |>
  summarise(toplam_alan = sum(alan)) |>
  arrange(desc(toplam_alan))

# Başlık
cat(" Grafik: Türkiye Genelinde Yangın Sonrası Müdahale Türlerinin Dağılımı (2023)\n")

# Grafik
print(
  ggplot(turkiye_geneli, aes(x = reorder(mudahale_turu, toplam_alan), y = toplam_alan)) +
    geom_bar(stat = "identity", fill = "darkolivegreen4") +
    coord_flip() +
    labs(
      title = NULL,
      x = "Mudahale Turu", y = "Toplam Alan (ha)"
    ) +
    theme_minimal(base_size = 11) +
    theme(plot.title = element_text(face = "bold", hjust = 0.5)) +
    scale_y_continuous(labels = label_comma())
)

```

Yukarıdaki grafik, 2023 yılında orman yangınlarından etkilenen alanlara uygulanan silvikültürel müdahale türlerini ve bu müdahalelerin toplam alan (hektar) cinsinden büyüklüklerini göstermektedir. En büyük payı, herhangi bir müdahale yapılmayarak gelecek yıla bırakılan alanlar oluşturmaktadır. Onu sırasıyla örtüye zarar görmeyen alanlar ve doğal gençleştirme uygulamaları takip etmektedir. En az müdahale ise koruma altına alınan alanlarda yapılmıştır.
```{r}


```
## Trend Analizi

Zaman içinde yangınların sayısı ve yanan alanların değişim trendleri analiz edilecektir.

```{r}

library(readxl)
library(dplyr)
library(ggplot2)
library(scales)

# Veriyi oku ve temizle
df <- read_excel("C:/Users/aktas/OneDrive/yangin_verisi/orman_yanginlari1988_2023.xlsx") |>
  mutate(
    yil = as.numeric(yil),
    adet = as.numeric(gsub("[^0-9.]", "", adet)),
    hektar = as.numeric(gsub("[^0-9.]", "", hektar))
  ) |>
  filter(!is.na(yil), !is.na(adet), !is.na(hektar))

# Grafik 1: Yangın Sayısı
ggplot(df, aes(x = yil, y = adet)) +
  geom_line(color = "firebrick", linewidth = 1.2) +
  geom_point(color = "darkred") +
  geom_smooth(method = "lm", se = TRUE, color = "black", linetype = "dashed") +
  labs(
    title = "Yıllara Göre Orman Yangın Sayısı ve Trend Analizi (1988–2023)",
    x = "Yıl",
    y = "Yangın Sayısı (adet)"
  ) +
  theme_minimal(base_size = 12) +
  theme(
    axis.text.x = element_text(angle = 90, vjust = 0.5),
    plot.title = element_text(face = "bold", hjust = 0.5)
  ) +
  scale_x_continuous(breaks = seq(min(df$yil), max(df$yil), by = 1)) +
  scale_y_continuous(labels = label_comma())



#----------------------------------------------------------

# Grafik 2: Yanan Alan
ggplot(df, aes(x = yil, y = hektar)) +
  geom_line(color = "darkgreen", linewidth = 1.2) +
  geom_point(color = "forestgreen") +
  geom_smooth(method = "lm", se = TRUE, color = "black", linetype = "dashed") +
  labs(
    title = "Yıllara Göre Yanan Alan ve Trend Analizi (1988–2023)",
    x = "Yıl",
    y = "Yanan Alan (hektar)"
  ) +
  theme_minimal(base_size = 12) +
  theme(
    axis.text.x = element_text(angle = 90, vjust = 0.5),
    plot.title = element_text(face = "bold", hjust = 0.5)
  ) +
  scale_x_continuous(breaks = seq(min(df$yil), max(df$yil), by = 1)) +
  scale_y_continuous(labels = label_comma())




```

```{r}


```
## Modelleme

Gerekirse yangın nedenleri ve etkileri üzerine istatistiksel modeller kurulacaktır.

## Sonuçlar

Elde edilen bulgular grafikler ve tablolarla sunulacaktır.

# Sonuçlar ve Öneriler

Çalışmadan elde edilen temel bulgular özetlenecek ve politika yapıcılar için öneriler geliştirilecektir.

**Not:** Bu projede belirli kod bloklarının hazırlanması ve veri yükleme yöntemlerinin düzenlenmesi aşamasında ChatGPT'den destek alınmıştır.
